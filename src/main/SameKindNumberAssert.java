package main;

import static java.lang.String.format;

import org.assertj.core.api.AbstractAssert;

/**
 * {@link SameKindNumber} specific assertions - Generated by CustomAssertionGenerator.
 */
public class SameKindNumberAssert extends AbstractAssert<SameKindNumberAssert, SameKindNumber> {

	/**
	 * Creates a new </code>{@link SameKindNumberAssert}</code> to make assertions on actual SameKindNumber.
	 * @param actual the SameKindNumber we want to make assertions on.
	 */
	public SameKindNumberAssert(SameKindNumber actual) {
		super(actual, SameKindNumberAssert.class);
	}

	/**
	 * An entry point for SameKindNumberAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
	 * With a static import, one's can write directly : <code>assertThat(mySameKindNumber)</code> and get specific assertion with code completion.
	 * @param actual the SameKindNumber we want to make assertions on.
	 * @return a new </code>{@link SameKindNumberAssert}</code>
	 */
	public static SameKindNumberAssert assertThat(SameKindNumber actual) {
		return new SameKindNumberAssert(actual);
	}

	/**
	 * Verifies that the actual SameKindNumber's figureValue is equal to the given one.
	 * @param figureValue the given figureValue to compare the actual SameKindNumber's figureValue to.
	 * @return this assertion object.
	 * @throws AssertionError - if the actual SameKindNumber's figureValue is not equal to the given one.
	 */
	public SameKindNumberAssert hasFigureValue(int figureValue) {
		// check that actual SameKindNumber we want to make assertions on is not null.
		isNotNull();

		// we overrides the default error message with a more explicit one
		String errorMessage = format("\nExpected <%s> figureValue to be:\n  <%s>\n but was:\n  <%s>", actual,
				figureValue, actual.getFigureValue());

		// check
		if (actual.getFigureValue() != figureValue) {
			throw new AssertionError(errorMessage);
		}

		// return the current assertion for method chaining
		return this;
	}

	/**
	 * Verifies that the actual SameKindNumber's number is equal to the given one.
	 * @param number the given number to compare the actual SameKindNumber's number to.
	 * @return this assertion object.
	 * @throws AssertionError - if the actual SameKindNumber's number is not equal to the given one.
	 */
	public SameKindNumberAssert hasNumber(int number) {
		// check that actual SameKindNumber we want to make assertions on is not null.
		isNotNull();

		// we overrides the default error message with a more explicit one
		String errorMessage = format("\nExpected <%s> number to be:\n  <%s>\n but was:\n  <%s>", actual, number,
				actual.getNumber());

		// check
		if (actual.getNumber() != number) {
			throw new AssertionError(errorMessage);
		}

		// return the current assertion for method chaining
		return this;
	}

}
